org: revolutionmortgage
app: credit-plus
service: cp-efolder-upload

custom:
  stage: ${opt:stage, self:provider.stage}
  profile:
    prod: prodAccount
    stage: stageAccount
    dev: devAccount
    pr: prAccount
  encompassApiBaseUrl:
    prod: https://elliemae-api-proxy.rmtg.io
    stage: https://elliemae-api-proxy.stagerm.io
    dev: https://elliemae-api-proxy.devrm.io
    pr: https://elliemae-api-proxy.prrm.io
  creditPlusEventBusName: "${self:custom.stage}-credit-plus"
  creditPlusEventBusArn: "arn:aws:events:#{AWS::Region}:#{AWS::AccountId}:event-bus/${self:custom.creditPlusEventBusName}"

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  profile: ${self:custom.profile.${self:custom.stage}}
  region: us-east-2
  tracing:
    lambda: true
  environment:
    REGEN_CF_VARS: v1 # Change this to force CloudFormation to regen stack. Useful if you change a value in secrets manager
    ENCOMPASS_API_BASE_URL: ${self:custom.encompassApiBaseUrl.${self:custom.stage}}
    ENCOMPASS_CLIENT_ID: !Sub "{{resolve:secretsmanager:${self:custom.stage}-${self:service}:SecretString:encompassClientId}}"
    ENCOMPASS_CLIENT_SECRET: !Sub "{{resolve:secretsmanager:${self:custom.stage}-${self:service}:SecretString:encompassClientSecret}}"
    ENCOMPASS_SMART_CLIENT_USER: !Sub "{{resolve:secretsmanager:${self:custom.stage}-${self:service}:SecretString:encompassUser}}"
    ENCOMPASS_SMART_CLIENT_PASSWORD: !Sub "{{resolve:secretsmanager:${self:custom.stage}-${self:service}:SecretString:encompassPassword}}"
    ENCOMPASS_INSTANCE: !Sub "{{resolve:secretsmanager:${self:custom.stage}-${self:service}:SecretString:encompassInstance}}"
    ENCOMPASS_API_KEY: !Sub "{{resolve:secretsmanager:${self:custom.stage}-${self:service}:SecretString:encompassApiKey}}"

functions:
  eFolderUDNReportUpload:
    handler: src/functions/eFolderUDNReportUpload.handler
    timeout: 30
    events:
      - eventBridge:
          eventBus: ${self:custom.creditPlusEventBusArn}
          pattern:
            source:
              - "lambda"
            detail-type:
              - "Loan"
            detail:
              event:
                - "Lambda Function Invocation Result - Succeeded"
            resources:
              - "arn:aws:lambda:#{AWS::Region}:#{AWS::AccountId}:function:cp-polling-${self:custom.stage}-getOrders"

resources:
  - ${file(./resources/alarms.yml)}

plugins:
  - serverless-plugin-typescript
  - serverless-pseudo-parameters
